// Code generated by "stringer -type=Measurement"; DO NOT EDIT.

package meters

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[Frequency-1]
	_ = x[Current-2]
	_ = x[CurrentL1-3]
	_ = x[CurrentL2-4]
	_ = x[CurrentL3-5]
	_ = x[Voltage-6]
	_ = x[VoltageL1-7]
	_ = x[VoltageL2-8]
	_ = x[VoltageL3-9]
	_ = x[Power-10]
	_ = x[PowerL1-11]
	_ = x[PowerL2-12]
	_ = x[PowerL3-13]
	_ = x[ImportPower-14]
	_ = x[ImportPowerL1-15]
	_ = x[ImportPowerL2-16]
	_ = x[ImportPowerL3-17]
	_ = x[ExportPower-18]
	_ = x[ExportPowerL1-19]
	_ = x[ExportPowerL2-20]
	_ = x[ExportPowerL3-21]
	_ = x[ActivePower-22]
	_ = x[ActivePowerL1-23]
	_ = x[ActivePowerL2-24]
	_ = x[ActivePowerL3-25]
	_ = x[ReactivePower-26]
	_ = x[ReactivePowerL1-27]
	_ = x[ReactivePowerL2-28]
	_ = x[ReactivePowerL3-29]
	_ = x[ApparentPower-30]
	_ = x[ApparentPowerL1-31]
	_ = x[ApparentPowerL2-32]
	_ = x[ApparentPowerL3-33]
	_ = x[Cosphi-34]
	_ = x[CosphiL1-35]
	_ = x[CosphiL2-36]
	_ = x[CosphiL3-37]
	_ = x[THD-38]
	_ = x[THDL1-39]
	_ = x[THDL2-40]
	_ = x[THDL3-41]
	_ = x[Net-42]
	_ = x[NetL1-43]
	_ = x[NetL2-44]
	_ = x[NetL3-45]
	_ = x[Active-46]
	_ = x[ActiveNet-47]
	_ = x[ActiveNetL1-48]
	_ = x[ActiveNetL2-49]
	_ = x[ActiveNetL3-50]
	_ = x[Reactive-51]
	_ = x[ReactiveNet-52]
	_ = x[ReactiveNetL1-53]
	_ = x[ReactiveNetL2-54]
	_ = x[ReactiveNetL3-55]
	_ = x[Import-56]
	_ = x[ImportL1-57]
	_ = x[ImportL2-58]
	_ = x[ImportL3-59]
	_ = x[Export-60]
	_ = x[ExportL1-61]
	_ = x[ExportL2-62]
	_ = x[ExportL3-63]
	_ = x[ActiveImportT1-64]
	_ = x[ActiveImportT2-65]
	_ = x[ReactiveImportT1-66]
	_ = x[ReactiveImportT2-67]
	_ = x[ActiveExportT1-68]
	_ = x[ActiveExportT2-69]
	_ = x[ReactiveExportT1-70]
	_ = x[ReactiveExportT2-71]
	_ = x[DCCurrent-72]
	_ = x[DCVoltage-73]
	_ = x[DCPower-74]
	_ = x[HeatSinkTemp-75]
	_ = x[ChargeState-76]
	_ = x[BatteryVoltage-77]
}

const _Measurement_name = "FrequencyCurrentCurrentL1CurrentL2CurrentL3VoltageVoltageL1VoltageL2VoltageL3PowerPowerL1PowerL2PowerL3ImportPowerImportPowerL1ImportPowerL2ImportPowerL3ExportPowerExportPowerL1ExportPowerL2ExportPowerL3ActivePowerActivePowerL1ActivePowerL2ActivePowerL3ReactivePowerReactivePowerL1ReactivePowerL2ReactivePowerL3ApparentPowerApparentPowerL1ApparentPowerL2ApparentPowerL3CosphiCosphiL1CosphiL2CosphiL3THDTHDL1THDL2THDL3NetNetL1NetL2NetL3ActiveActiveNetActiveNetL1ActiveNetL2ActiveNetL3ReactiveReactiveNetReactiveNetL1ReactiveNetL2ReactiveNetL3ImportImportL1ImportL2ImportL3ExportExportL1ExportL2ExportL3ActiveImportT1ActiveImportT2ReactiveImportT1ReactiveImportT2ActiveExportT1ActiveExportT2ReactiveExportT1ReactiveExportT2DCCurrentDCVoltageDCPowerHeatSinkTempChargeStateBatteryVoltage"

var _Measurement_index = [...]uint16{0, 9, 16, 25, 34, 43, 50, 59, 68, 77, 82, 89, 96, 103, 114, 127, 140, 153, 164, 177, 190, 203, 214, 227, 240, 253, 266, 281, 296, 311, 324, 339, 354, 369, 375, 383, 391, 399, 402, 407, 412, 417, 420, 425, 430, 435, 441, 450, 461, 472, 483, 491, 502, 515, 528, 541, 547, 555, 563, 571, 577, 585, 593, 601, 615, 629, 645, 661, 675, 689, 705, 721, 730, 739, 746, 758, 769, 783}

func (i Measurement) String() string {
	i -= 1
	if i < 0 || i >= Measurement(len(_Measurement_index)-1) {
		return "Measurement(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _Measurement_name[_Measurement_index[i]:_Measurement_index[i+1]]
}
