// Code generated by "stringer -type=Measurement"; DO NOT EDIT.

package meters

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[Frequency-1]
	_ = x[Current-2]
	_ = x[CurrentL1-3]
	_ = x[CurrentL2-4]
	_ = x[CurrentL3-5]
	_ = x[Voltage-6]
	_ = x[VoltageL1-7]
	_ = x[VoltageL2-8]
	_ = x[VoltageL3-9]
	_ = x[Power-10]
	_ = x[PowerL1-11]
	_ = x[PowerL2-12]
	_ = x[PowerL3-13]
	_ = x[ImportPower-14]
	_ = x[ImportPowerL1-15]
	_ = x[ImportPowerL2-16]
	_ = x[ImportPowerL3-17]
	_ = x[ExportPower-18]
	_ = x[ExportPowerL1-19]
	_ = x[ExportPowerL2-20]
	_ = x[ExportPowerL3-21]
	_ = x[ReactivePower-22]
	_ = x[ReactivePowerL1-23]
	_ = x[ReactivePowerL2-24]
	_ = x[ReactivePowerL3-25]
	_ = x[ApparentPower-26]
	_ = x[ApparentPowerL1-27]
	_ = x[ApparentPowerL2-28]
	_ = x[ApparentPowerL3-29]
	_ = x[Cosphi-30]
	_ = x[CosphiL1-31]
	_ = x[CosphiL2-32]
	_ = x[CosphiL3-33]
	_ = x[THD-34]
	_ = x[THDL1-35]
	_ = x[THDL2-36]
	_ = x[THDL3-37]
	_ = x[Sum-38]
	_ = x[SumL1-39]
	_ = x[SumL2-40]
	_ = x[SumL3-41]
	_ = x[Import-42]
	_ = x[ImportL1-43]
	_ = x[ImportL2-44]
	_ = x[ImportL3-45]
	_ = x[Export-46]
	_ = x[ExportL1-47]
	_ = x[ExportL2-48]
	_ = x[ExportL3-49]
	_ = x[Reactive-50]
	_ = x[ReactiveL1-51]
	_ = x[ReactiveL2-52]
	_ = x[ReactiveL3-53]
	_ = x[Apparent-54]
	_ = x[ApparentL1-55]
	_ = x[ApparentL2-56]
	_ = x[ApparentL3-57]
	_ = x[ApparentImport-58]
	_ = x[ApparentImportT1-59]
	_ = x[ApparentImportT2-60]
	_ = x[ReactiveImport-61]
	_ = x[ReactiveImportT1-62]
	_ = x[ReactiveImportT2-63]
	_ = x[ApparentExport-64]
	_ = x[ApparentExportT1-65]
	_ = x[ApparentExportT2-66]
	_ = x[ReactiveExport-67]
	_ = x[ReactiveExportT1-68]
	_ = x[ReactiveExportT2-69]
	_ = x[DCCurrent-70]
	_ = x[DCVoltage-71]
	_ = x[DCPower-72]
	_ = x[HeatSinkTemp-73]
	_ = x[ChargeState-74]
	_ = x[BatteryVoltage-75]
}

const _Measurement_name = "FrequencyCurrentCurrentL1CurrentL2CurrentL3VoltageVoltageL1VoltageL2VoltageL3PowerPowerL1PowerL2PowerL3ImportPowerImportPowerL1ImportPowerL2ImportPowerL3ExportPowerExportPowerL1ExportPowerL2ExportPowerL3ReactivePowerReactivePowerL1ReactivePowerL2ReactivePowerL3ApparentPowerApparentPowerL1ApparentPowerL2ApparentPowerL3CosphiCosphiL1CosphiL2CosphiL3THDTHDL1THDL2THDL3SumSumL1SumL2SumL3ImportImportL1ImportL2ImportL3ExportExportL1ExportL2ExportL3ReactiveReactiveL1ReactiveL2ReactiveL3ApparentApparentL1ApparentL2ApparentL3ApparentImportApparentImportT1ApparentImportT2ReactiveImportReactiveImportT1ReactiveImportT2ApparentExportApparentExportT1ApparentExportT2ReactiveExportReactiveExportT1ReactiveExportT2DCCurrentDCVoltageDCPowerHeatSinkTempChargeStateBatteryVoltage"

var _Measurement_index = [...]uint16{0, 9, 16, 25, 34, 43, 50, 59, 68, 77, 82, 89, 96, 103, 114, 127, 140, 153, 164, 177, 190, 203, 216, 231, 246, 261, 274, 289, 304, 319, 325, 333, 341, 349, 352, 357, 362, 367, 370, 375, 380, 385, 391, 399, 407, 415, 421, 429, 437, 445, 453, 463, 473, 483, 491, 501, 511, 521, 535, 551, 567, 581, 597, 613, 627, 643, 659, 673, 689, 705, 714, 723, 730, 742, 753, 767}

func (i Measurement) String() string {
	i -= 1
	if i < 0 || i >= Measurement(len(_Measurement_index)-1) {
		return "Measurement(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _Measurement_name[_Measurement_index[i]:_Measurement_index[i+1]]
}
