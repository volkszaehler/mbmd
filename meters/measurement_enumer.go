// Code generated by "enumer -type=Measurement"; DO NOT EDIT.

//
package meters

import (
	"fmt"
)

const _MeasurementName = "FrequencyCurrentCurrentL1CurrentL2CurrentL3VoltageVoltageL1VoltageL2VoltageL3PowerPowerL1PowerL2PowerL3ImportPowerImportPowerL1ImportPowerL2ImportPowerL3ExportPowerExportPowerL1ExportPowerL2ExportPowerL3ReactivePowerReactivePowerL1ReactivePowerL2ReactivePowerL3ApparentPowerApparentPowerL1ApparentPowerL2ApparentPowerL3CosphiCosphiL1CosphiL2CosphiL3THDTHDL1THDL2THDL3SumSumT1SumT2SumL1SumL2SumL3ImportImportT1ImportT2ImportL1ImportL2ImportL3ExportExportT1ExportT2ExportL1ExportL2ExportL3ReactiveSumReactiveSumT1ReactiveSumT2ReactiveSumL1ReactiveSumL2ReactiveSumL3ReactiveImportReactiveImportT1ReactiveImportT2ReactiveImportL1ReactiveImportL2ReactiveImportL3ReactiveExportReactiveExportT1ReactiveExportT2ReactiveExportL1ReactiveExportL2ReactiveExportL3DCCurrentDCVoltageDCPowerHeatSinkTempDCCurrentS1DCVoltageS1DCPowerS1DCEnergyS1DCCurrentS2DCVoltageS2DCPowerS2DCEnergyS2DCCurrentS3DCVoltageS3DCPowerS3DCEnergyS3ChargeStateBatteryVoltagePhaseAngle"

var _MeasurementIndex = [...]uint16{0, 9, 16, 25, 34, 43, 50, 59, 68, 77, 82, 89, 96, 103, 114, 127, 140, 153, 164, 177, 190, 203, 216, 231, 246, 261, 274, 289, 304, 319, 325, 333, 341, 349, 352, 357, 362, 367, 370, 375, 380, 385, 390, 395, 401, 409, 417, 425, 433, 441, 447, 455, 463, 471, 479, 487, 498, 511, 524, 537, 550, 563, 577, 593, 609, 625, 641, 657, 671, 687, 703, 719, 735, 751, 760, 769, 776, 788, 799, 810, 819, 829, 840, 851, 860, 870, 881, 892, 901, 911, 922, 936, 946}

func (i Measurement) String() string {
	i -= 1
	if i < 0 || i >= Measurement(len(_MeasurementIndex)-1) {
		return fmt.Sprintf("Measurement(%d)", i+1)
	}
	return _MeasurementName[_MeasurementIndex[i]:_MeasurementIndex[i+1]]
}

var _MeasurementValues = []Measurement{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92}

var _MeasurementNameToValueMap = map[string]Measurement{
	_MeasurementName[0:9]:     1,
	_MeasurementName[9:16]:    2,
	_MeasurementName[16:25]:   3,
	_MeasurementName[25:34]:   4,
	_MeasurementName[34:43]:   5,
	_MeasurementName[43:50]:   6,
	_MeasurementName[50:59]:   7,
	_MeasurementName[59:68]:   8,
	_MeasurementName[68:77]:   9,
	_MeasurementName[77:82]:   10,
	_MeasurementName[82:89]:   11,
	_MeasurementName[89:96]:   12,
	_MeasurementName[96:103]:  13,
	_MeasurementName[103:114]: 14,
	_MeasurementName[114:127]: 15,
	_MeasurementName[127:140]: 16,
	_MeasurementName[140:153]: 17,
	_MeasurementName[153:164]: 18,
	_MeasurementName[164:177]: 19,
	_MeasurementName[177:190]: 20,
	_MeasurementName[190:203]: 21,
	_MeasurementName[203:216]: 22,
	_MeasurementName[216:231]: 23,
	_MeasurementName[231:246]: 24,
	_MeasurementName[246:261]: 25,
	_MeasurementName[261:274]: 26,
	_MeasurementName[274:289]: 27,
	_MeasurementName[289:304]: 28,
	_MeasurementName[304:319]: 29,
	_MeasurementName[319:325]: 30,
	_MeasurementName[325:333]: 31,
	_MeasurementName[333:341]: 32,
	_MeasurementName[341:349]: 33,
	_MeasurementName[349:352]: 34,
	_MeasurementName[352:357]: 35,
	_MeasurementName[357:362]: 36,
	_MeasurementName[362:367]: 37,
	_MeasurementName[367:370]: 38,
	_MeasurementName[370:375]: 39,
	_MeasurementName[375:380]: 40,
	_MeasurementName[380:385]: 41,
	_MeasurementName[385:390]: 42,
	_MeasurementName[390:395]: 43,
	_MeasurementName[395:401]: 44,
	_MeasurementName[401:409]: 45,
	_MeasurementName[409:417]: 46,
	_MeasurementName[417:425]: 47,
	_MeasurementName[425:433]: 48,
	_MeasurementName[433:441]: 49,
	_MeasurementName[441:447]: 50,
	_MeasurementName[447:455]: 51,
	_MeasurementName[455:463]: 52,
	_MeasurementName[463:471]: 53,
	_MeasurementName[471:479]: 54,
	_MeasurementName[479:487]: 55,
	_MeasurementName[487:498]: 56,
	_MeasurementName[498:511]: 57,
	_MeasurementName[511:524]: 58,
	_MeasurementName[524:537]: 59,
	_MeasurementName[537:550]: 60,
	_MeasurementName[550:563]: 61,
	_MeasurementName[563:577]: 62,
	_MeasurementName[577:593]: 63,
	_MeasurementName[593:609]: 64,
	_MeasurementName[609:625]: 65,
	_MeasurementName[625:641]: 66,
	_MeasurementName[641:657]: 67,
	_MeasurementName[657:671]: 68,
	_MeasurementName[671:687]: 69,
	_MeasurementName[687:703]: 70,
	_MeasurementName[703:719]: 71,
	_MeasurementName[719:735]: 72,
	_MeasurementName[735:751]: 73,
	_MeasurementName[751:760]: 74,
	_MeasurementName[760:769]: 75,
	_MeasurementName[769:776]: 76,
	_MeasurementName[776:788]: 77,
	_MeasurementName[788:799]: 78,
	_MeasurementName[799:810]: 79,
	_MeasurementName[810:819]: 80,
	_MeasurementName[819:829]: 81,
	_MeasurementName[829:840]: 82,
	_MeasurementName[840:851]: 83,
	_MeasurementName[851:860]: 84,
	_MeasurementName[860:870]: 85,
	_MeasurementName[870:881]: 86,
	_MeasurementName[881:892]: 87,
	_MeasurementName[892:901]: 88,
	_MeasurementName[901:911]: 89,
	_MeasurementName[911:922]: 90,
	_MeasurementName[922:936]: 91,
	_MeasurementName[936:946]: 92,
}

// MeasurementString retrieves an enum value from the enum constants string name.
// Throws an error if the param is not part of the enum.
func MeasurementString(s string) (Measurement, error) {
	if val, ok := _MeasurementNameToValueMap[s]; ok {
		return val, nil
	}
	return 0, fmt.Errorf("%s does not belong to Measurement values", s)
}

// MeasurementValues returns all values of the enum
func MeasurementValues() []Measurement {
	return _MeasurementValues
}

// IsAMeasurement returns "true" if the value is listed in the enum definition. "false" otherwise
func (i Measurement) IsAMeasurement() bool {
	for _, v := range _MeasurementValues {
		if i == v {
			return true
		}
	}
	return false
}
